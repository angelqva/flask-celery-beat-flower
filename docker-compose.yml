services:
    db:
        container_name: db
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: root
            POSTGRES_USER: postgres
            POSTGRES_DB: sample
        volumes:
            - db_data:/var/lib/postgresql/data
        expose:
            - 5432
        networks:
            lan:
                ipv4_address: 183.22.0.50
    master:
        container_name: master
        image: redis:7
        command: redis-server --port 6379
        networks:
            lan:
                ipv4_address: 183.22.0.100
        expose:
            - 6379
    slave:
        container_name: slave
        image: redis:7
        command: redis-server --port 6379 --slaveof master 6379
        networks:
            lan:
                ipv4_address: 183.22.0.200
        expose:
            - 6379

    sentinel:
        container_name: sentinel
        build:
            context: ./sentinel
        command: redis-sentinel /etc/redis/sentinel.conf
        volumes:
            - sentinel:/etc/redis/
        networks:
            - lan
        expose:
            - 26379
        depends_on:
            - master
            - slave
    web:
        container_name: web
        build:
            context: .
        env_file:
            - ./.env
        volumes:
            - ./src:/app
        command: flask run -h 0.0.0.0
        networks:
            - lan
        ports:
            - 5000:5000
        extra_hosts:
            - "host.docker.internal:host-gateway"
    celery:
        container_name: celery
        build:
            context: .
        env_file:
            - ./.env
        volumes:
            - ./src:/app
        command: celery -A run.celery worker --loglevel=info
        depends_on:
            - sentinel
        networks:
            - lan
        extra_hosts:
            - "host.docker.internal:host-gateway"
    beat:
        container_name: beat
        build:
            context: .
        env_file:
            - ./.env
        volumes:
            - ./src:/app
        command: celery -A run.celery beat -l info
        depends_on:
            - sentinel
        networks:
            - lan
        extra_hosts:
            - "host.docker.internal:host-gateway"
    flower:
        container_name: flower
        build:
            context: .
        env_file:
            - ./.env
        volumes:
            - ./src:/app
        command: >
            celery -A run.celery flower --broker=sentinel://sentinel:26379/0 --broker_transport_options='{"master_name": "mymaster", "sentinels": [("sentinel", 26379)]}'
        networks:
            - lan
        extra_hosts:
            - "host.docker.internal:host-gateway"
        depends_on:
            - sentinel
        ports:
            - 5555:5555

networks:
    lan:
        ipam:
            driver: default
            config:
                - subnet: 183.22.0.0/16

volumes:
    db_data:
    sentinel:
